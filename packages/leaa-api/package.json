{
  "name": "@leaa/api",
  "author": "solidzoro@live.com",
  "version": "3.5.2",
  "private": false,
  "sideEffect": false,
  "license": "BSD-3-Clause-Clear",
  "engines": {
    "node": ">=12",
    "npm": ">=6.4.0",
    "yarn": ">=1.15"
  },
  "scripts": {
    "---------------------------------------------------------------------- LINT ----": "----",
    "lint-js": "eslint \"src/**/*.{ts,tsx}\"",
    "lint": "yarn run lint-js",
    "fix-js": "yarn run lint-js --fix",
    "fix": "yarn run fix-js",
    "---------------------------------------------------------------------- TEST ----": "----",
    "test": "NODE_ENV=test DEMO_MODE=false jest --verbose --config=jest.config.js",
    "test:codecov": "jest --coverage --detectOpenHandles --forceExit --config=jest.config.js",
    "test:watch": "jest --watch --verbose --config=jest.config.js",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "e2e": "jest --config=jest-e2e.config.js --forceExit",
    "codecov": "codecov",
    "tsc-check": "tsc -v && tsc --noEmit",
    "---------------------------------------------------------------------- DEV ----": "----",
    "dev-tsnodedev": "NODE_ENV=development ts-node-dev --respawn --transpileOnly --ignore-watch node_modules -r tsconfig-paths/register ./src/main.ts",
    "dev": "NODE_ENV=development yarn dev-tsnodedev",
    "seed-dev": "NODE_ENV=development ts-node-dev --respawn --transpileOnly -r tsconfig-paths/register src/modules/v1/seed/seed.command.ts",
    "clear": "rimraf _dist",
    "---------------------------------------------------------------------- PROD ----": "----",
    "seed": "NODE_ENV=production node src/modules/v1/seed/seed.command.js",
    "prod": "NODE_ENV=production ts-node-dev --respawn --transpileOnly -r tsconfig-paths/register ./src/main.ts",
    "postbuild": "node ./tools/cli/gen-version.js && node ./tools/cli/gen-production-package.js",
    "build": "yarn clear && NODE_ENV=production ttsc -b tsconfig.build.json",
    "---------------------------------------------------------------------- DOCKER ----": "----",
    "docker-install-notes": "⚠️ All the install actions of yarn are completed in the local docker, and then created git repo for deployment, all dist files (includes node_modules dir) push to this repo. It will be very large for the init time, but it will be very small afterwards, and when needed Can be rolled back reliably and conveniently. (More See DEPLOYMENT.md) 所有关于 yarn 的安装动作都在本地的 docker 中完成，然后新建一个专门用于部署的 git-repo，然后把所有 dist 文件（包含完整的 node_modules）提交到这个 repo，第一次提交体积会很大，但是之后就小了，并且在需要的时候可以很方便、可靠的回滚。（更多细节请阅读 DEPLOYMENT.md）",
    "docker-install": "yarn add node-gyp -D && yarn install --production",
    "docker-start": "NODE_ENV=production pm2-docker ecosystem.config.js start",
    "docker-pm2-test": "NODE_ENV=production pm2 -v",
    "pm2": "pm2",
    "---------------------------------------------------------------------- SERVER ----": "----",
    "start": "NODE_ENV=production node ./index.js",
    "---------------------------------------------------------------------- ALIAS ----": "----",
    "commit": "git-cz",
    "u": "yarn upgrade-interactive --latest"
  },
  "dependencies": {
    "@nestjs/common": "^7.2.0",
    "@nestjs/core": "^7.2.0",
    "@nestjs/jwt": "^7.0.0",
    "@nestjs/passport": "^7.0.0",
    "@nestjs/platform-express": "^7.2.0",
    "@nestjs/testing": "^7.2.0",
    "@nestjs/typeorm": "^7.1.0",
    "@nestjsx/crud": "^4.6.2",
    "@nestjsx/crud-typeorm": "^4.6.2",
    "ali-oss": "^6.9.1",
    "bcryptjs": "^2.4.3",
    "cache-manager": "^3.3.0",
    "class-transformer": "^0.2.3",
    "class-validator": "^0.12.2",
    "core-js": "3.6.5",
    "diff": "^4.0.2",
    "dotenv": "^8.2.0",
    "envalid": "^6.0.2",
    "express": "^4.17.1",
    "express-rate-limit": "^5.1.3",
    "helmet": "^3.23.1",
    "html-to-text": "^5.1.1",
    "i18next": "^19.4.5",
    "i18next-http-middleware": "^2.1.2",
    "image-size": "^0.8.3",
    "ip": "^1.1.5",
    "jsondiffpatch": "^0.4.1",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.15",
    "mkdirp": "1.0.4",
    "moment": "2.27.0",
    "multer": "^1.4.1",
    "mysql": "^2.18.1",
    "node-xlsx": "^0.15.0",
    "nodejieba": "^2.4.1",
    "passport": "^0.4.1",
    "passport-github": "^1.1.0",
    "passport-jwt": "^4.0.0",
    "path-to-regexp": "^6.1.0",
    "readline-sync": "^1.4.10",
    "reflect-metadata": "^0.1.12",
    "rxjs": "^6.5.5",
    "svg-captcha": "^1.4.0",
    "transliteration": "^2.1.11",
    "typeorm": "^0.2.25",
    "uuid": "^8.1.0",
    "validator": "^13.1.1",
    "winston": "^3.2.1",
    "winston-daily-rotate-file": "^4.5.0",
    "xss": "^1.0.7"
  },
  "devDependencies": {
    "@types/ali-oss": "^6.0.5",
    "@types/bcryptjs": "^2.4.2",
    "@types/cache-manager": "^2.10.3",
    "@types/core-js": "2.5.3",
    "@types/diff": "^4.0.2",
    "@types/express": "^4.17.6",
    "@types/express-rate-limit": "^5.0.0",
    "@types/helmet": "^0.0.47",
    "@types/html-to-text": "^5.1.1",
    "@types/ip": "^1.1.0",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/lodash": "^4.14.155",
    "@types/mkdirp": "^1.0.1",
    "@types/multer": "^1.4.3",
    "@types/mysql": "^2.15.14",
    "@types/node": "^14.0.13",
    "@types/node-xlsx": "^0.15.0",
    "@types/passport": "^1.0.3",
    "@types/passport-github": "^1.1.5",
    "@types/passport-jwt": "^3.0.3",
    "@types/readline-sync": "^1.4.3",
    "@types/shelljs": "^0.8.8",
    "@types/uuid": "^8.0.0",
    "@types/validator": "^13.0.0",
    "express-serve-static-core": "^0.1.1",
    "tsconfig-paths": "^3.9.0",
    "ttypescript": "^1.5.10",
    "typescript-transform-paths": "^1.1.14"
  }
}
